//remove a element and place it in its rightful position
//approach is time consuming but gives idea about Recursion
#include <bits/stdc++.h>
using namespace std;
#define INT_MIN_VALUE -2147483648
#define INT_MAX_VALUE 2147483647

void insertElement(stack<int>&st, int curr) {
	if (st.empty() || st.top() < curr) {
		st.push(curr);
		return;
	}

	int topElement = st.top();
	st.pop();

	insertElement(st, curr);
	st.push(topElement);

}

void sortStack(stack<int>&st, int n) {
	if (n == 1) return;

	int topElement = st.top();
	st.pop();

	sortStack(st, n - 1);
	insertElement(st, topElement);

}

int main() {
	int n;
	cin >> n;

	stack<int>st;

	for (int i = 0; i < n; i++)	{
		int tmp;
		cin >> tmp;
		st.push(tmp);
	}

	sortStack(st, n);

	while (!st.empty()) {
		cout << st.top() << endl;
		st.pop();
	}

	return 0;
}