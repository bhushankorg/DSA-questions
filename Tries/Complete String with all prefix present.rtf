{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 struct Node\{\
    Node* links[26];\
    bool flag = false;\
    \
    bool containsLink(char ch)\{\
        return links[ch - 'a'] != NULL;    \
    \}\
    \
    Node* getLink(char ch)\{\
        return links[ch - 'a'];\
    \}\
    \
    void addLink(char ch, Node* node)\{\
        links[ch - 'a'] = node;\
    \}\
    \
    void addEnd()\{\
        flag = true;\
    \}\
    \
    bool hasEnd()\{\
        return flag;\
    \}\
\};\
\
class Trie\{\
private:\
    Node* root;\
public:\
    Trie()\{\
        root = new Node();\
    \}\
    \
    //inserting a string in Trie\
    void insert(string data)\{\
        Node* node = root;\
        for(char ch : data)\{\
            if(!node->containsLink(ch))\{\
                node->addLink(ch, new Node());\
            \}\
            node = node->getLink(ch);\
        \}\
        node->addEnd();\
    \}\
    \
    //check if a string is complete\
    bool isComplete(string data)\{\
        Node* node = root;\
        for(char ch : data)\{\
            node = node->getLink(ch);\
            if(!node->hasEnd()) return false;\
        \}\
        \
        return node->hasEnd();\
    \}\
    \
\};\
\
string completeString(int n, vector<string> &a)\{\
    // Write your code here.\
    Trie* node = new Trie();\
    string ans = "";\
    \
    for(auto str : a)\{\
        node->insert(str);\
    \}\
    \
    for(auto str : a)\{\
        if(node->isComplete(str))\{\
            if(str.length() > ans.length())\
                ans = str;\
            else if(str.length() == ans.length() &&\
                   str < ans)\
                ans = str;\
        \}\
    \}\
    \
    return (ans == "") ? "None" : ans;\
\}}