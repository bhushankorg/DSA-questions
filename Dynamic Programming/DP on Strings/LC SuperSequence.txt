string longestComSunSeq(string word1, string word2) {
	int row = word1.length(), col = word2.length();
	string str = "";
	vector<vector<int>>dp(row + 1, vector<int>(col + 1, 0));

	for (int i = 1; i < row + 1; i++)	{
		for (int j = 1; j < col + 1; j++)	{
			if (word1[i - 1] == word2[j - 1])
				dp[i][j] = 1 + dp[i - 1][j - 1];
			else
				dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
		}
	}

	int i = row, j = col;

	while (i >= 0 && j >= 0) {
		if (i - 1 >= 0 && dp[i - 1][j] == dp[i][j]) {
			str += word1[i - 1];
			i--;
		}
		else if (j - 1 >= 0 && dp[i][j - 1] == dp[i][j]) {
			str += word2[j - 1];
			j--;
		}
		else if (i - 1 >= 0 && j - 1 >= 0) {
			str += word1[i - 1];
			i--;
			j--;
		}
		else break;
	}

	displayMat(dp);

	reverse(str.begin(), str.end());
	return str;
}
