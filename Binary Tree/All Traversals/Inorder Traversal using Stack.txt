//https://leetcode.com/problems/binary-tree-inorder-traversal/

vector<int> inorderTraversal(TreeNode* root) {
        vector<int> inorder;
        if(root == NULL) return inorder;

        stack<TreeNode*> st;
        TreeNode* node = root;
        
        while(true){
            if(node){       //if node is not null 
            //put it in stack move left(L-Root-R)
                st.push(node);
                node = node->left;
            }
            else{           //if node is null
                if(st.empty()) break;   //check if stack has nodes
                node = st.top();        //remove latest element 
                st.pop();
                inorder.push_back(node->val);//push latest element in vector
                node = node->right;     //see if it has right
            }
        }

        return inorder;
    }